#!/usr/bin/python

import argparse, os, shutil, subprocess, sys, textwrap
import ConfigParser

class Config:
  def __init__(self, configFile):
    self.configFile = os.path.expanduser(configFile)
    self.parser = ConfigParser.SafeConfigParser()
    try:
      fp = open(self.configFile)
    except:
      shutil.copy2(sys.path[0]+'/uta-utils.conf.default',self.configFile)
      print 'Please edit the config file then try again...'
      ed = os.getenv('EDITOR') or 'vim'
      subprocess.call([ed,self.configFile])
      exit(2)
    self.parser.readfp(fp)
    fp.close()
  
  @property
  def students(self):
    return self.parser.items('Students')

class Repo:
  def __init__(self, dir):
    self.dir = dir
  
  @property
  def rootCommit(self):
    return subprocess.check_output('git rev-list HEAD --parents|grep "^[a-f0-9]*$"|tail -n1',
                                   cwd=self.dir, shell=True).strip()
  
  @property
  def diffFiles(self):
    return subprocess.check_output('git diff-tree -r HEAD {0} --name-only'.format(self.rootCommit),
                                   cwd=self.dir, shell=True).strip().splitlines()

#####################################################################
#####################################################################

def fetch(cmd, desc):
  parser = argparse.ArgumentParser(description=desc,
                                   prog='{0} {1}'.format('uta', cmd),
                                   epilog='''This will create a subdirectory for each student in the current directory, with each containing that student's Git repository''')
  parser.add_argument('exercise',
                      help='''The name of the exercise, e.g. TurtleInterpreter''')
  args = parser.parse_args(sys.argv[2:])
  for login, name in config.students:
    cmd = 'git clone /vol/lab/firstyear/Repositories/2011-2012/161/{0}/{1}.git {0}'.format(login, args.exercise)
    print cmd
    subprocess.call(cmd, shell=True)

def diff(cmd, desc):
  parser = argparse.ArgumentParser(description=desc,
                                   prog='{0} {1}'.format('uta', cmd))
  group = parser.add_mutually_exclusive_group()
  group.add_argument('--all',
                      help='''Work on all subdirectories''', action='store_true')
  group.add_argument('dir',
                      help='''The repository to be checked''', default='.', nargs='?')
  args = parser.parse_args(sys.argv[2:])
  for f in Repo(args.dir).diffFiles:
    print f

def listStudents(cmd, desc):
  for login, name in config.students:
    print "{0} : {1}".format(login, name)

#####################################################################
#####################################################################

functions = {
  'fetch' : ('Fetch your students\' repositories', fetch),
  'diff' : ('List the modified files that will be printed', diff),
  'students' : ('List your students', listStudents),
}

#####################################################################
#####################################################################

config = Config(sys.path[0]+'/uta-utils.conf')

try:
  (desc, f) = functions[sys.argv[1]]
except:
  print textwrap.dedent('''\
    usage: {0} command [-h/--help]

    Available commands:''').format('uta')
  for n,(d,f) in functions.items():
    print("  {0}: {1}".format(n, d))
  exit(1)
f(sys.argv[1], desc)
